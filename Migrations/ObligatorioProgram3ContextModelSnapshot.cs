// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ObligatorioProgram3.Models;

#nullable disable

namespace ObligatorioProgram3.Migrations
{
    [DbContext(typeof(ObligatorioProgram3Context))]
    partial class ObligatorioProgram3ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ObligatorioProgram3.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Clientes__3214EC27AAE9DA96");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Clima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionClima")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<decimal>("Temperatura")
                        .HasColumnType("decimal(2, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Clima__3214EC27180A4653");

                    b.ToTable("Clima", (string)null);
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Cotizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Cotizaci__3214EC27815FD456");

                    b.ToTable("Cotizacion", (string)null);
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NombrePlato")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(7, 2)");

                    b.Property<string>("RutaImagen")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("Id")
                        .HasName("PK__Menu__3214EC278613F335");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Mesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("Idrestaurante")
                        .HasColumnType("int")
                        .HasColumnName("IDRestaurante");

                    b.Property<int>("NumeroMesa")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Mesas__3214EC27EEDBF2F1");

                    b.HasIndex("Idrestaurante");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.OrdenDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("Idmenu")
                        .HasColumnType("int")
                        .HasColumnName("IDMenu");

                    b.Property<int?>("Idorden")
                        .HasColumnType("int")
                        .HasColumnName("IDOrden");

                    b.HasKey("Id")
                        .HasName("PK__OrdenDet__3214EC27293E9D4B");

                    b.HasIndex("Idmenu");

                    b.HasIndex("Idorden");

                    b.ToTable("OrdenDetalle", (string)null);
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Ordene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idreserva")
                        .HasColumnType("int")
                        .HasColumnName("IDReserva");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Ordenes__3214EC2760805297");

                    b.HasIndex("Idreserva");

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("FechaPago")
                        .HasColumnType("date");

                    b.Property<int?>("Idclima")
                        .HasColumnType("int")
                        .HasColumnName("IDClima");

                    b.Property<int?>("Idcotizacion")
                        .HasColumnType("int")
                        .HasColumnName("IDCotizacion");

                    b.Property<int?>("Idreserva")
                        .HasColumnType("int")
                        .HasColumnName("IDReserva");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Pagos__3214EC27A3E14295");

                    b.HasIndex("Idclima");

                    b.HasIndex("Idcotizacion");

                    b.HasIndex("Idreserva");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly>("FechaReserva")
                        .HasColumnType("date");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCliente");

                    b.Property<int?>("Idmesa")
                        .HasColumnType("int")
                        .HasColumnName("IDMesa");

                    b.HasKey("Id")
                        .HasName("PK__Reservas__3214EC271470247F");

                    b.HasIndex("Idcliente");

                    b.HasIndex("Idmesa");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Reseña", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)");

                    b.Property<DateOnly>("FechaReseña")
                        .HasColumnType("date");

                    b.Property<int?>("Idcliente")
                        .HasColumnType("int")
                        .HasColumnName("IDCliente");

                    b.Property<int?>("Idrestaurante")
                        .HasColumnType("int")
                        .HasColumnName("IDRestaurante");

                    b.Property<int>("Puntaje")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Reseñas__3214EC277E3C5AC0");

                    b.HasIndex("Idcliente");

                    b.HasIndex("Idrestaurante");

                    b.ToTable("Reseñas");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Restaurante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Restaura__3214EC27D6EF9985");

                    b.ToTable("Restaurantes");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.RolPermiso", b =>
                {
                    b.Property<int?>("IdRol")
                        .HasColumnType("int");

                    b.Property<int?>("IdPermisos")
                        .HasColumnType("int");

                    b.HasKey("IdRol", "IdPermisos");

                    b.HasIndex("IdPermisos");

                    b.ToTable("RolPermiso", (string)null);
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("Idrol")
                        .HasColumnType("int")
                        .HasColumnName("IDRol");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Usuarios__3214EC2707E35BEF");

                    b.HasIndex("Idrol");

                    b.HasIndex(new[] { "Email" }, "UQ__Usuarios__A9D10534CAEBD9BC")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Mesa", b =>
                {
                    b.HasOne("ObligatorioProgram3.Models.Restaurante", "IdrestauranteNavigation")
                        .WithMany("Mesas")
                        .HasForeignKey("Idrestaurante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_MesaRestaurante");

                    b.Navigation("IdrestauranteNavigation");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.OrdenDetalle", b =>
                {
                    b.HasOne("ObligatorioProgram3.Models.Menu", "IdmenuNavigation")
                        .WithMany("OrdenDetalles")
                        .HasForeignKey("Idmenu")
                        .HasConstraintName("FK_OrdenMenu");

                    b.HasOne("ObligatorioProgram3.Models.Ordene", "IdordenNavigation")
                        .WithMany("OrdenDetalles")
                        .HasForeignKey("Idorden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_DetalleOrden");

                    b.Navigation("IdmenuNavigation");

                    b.Navigation("IdordenNavigation");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Ordene", b =>
                {
                    b.HasOne("ObligatorioProgram3.Models.Reserva", "IdreservaNavigation")
                        .WithMany("Ordenes")
                        .HasForeignKey("Idreserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_OrdenReserva");

                    b.Navigation("IdreservaNavigation");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Pago", b =>
                {
                    b.HasOne("ObligatorioProgram3.Models.Clima", "IdclimaNavigation")
                        .WithMany("Pagos")
                        .HasForeignKey("Idclima")
                        .HasConstraintName("FK_PagosClima");

                    b.HasOne("ObligatorioProgram3.Models.Cotizacion", "IdcotizacionNavigation")
                        .WithMany("Pagos")
                        .HasForeignKey("Idcotizacion")
                        .HasConstraintName("FK_PagosCotizacion");

                    b.HasOne("ObligatorioProgram3.Models.Reserva", "IdreservaNavigation")
                        .WithMany("Pagos")
                        .HasForeignKey("Idreserva")
                        .HasConstraintName("FK_PagosReserva");

                    b.Navigation("IdclimaNavigation");

                    b.Navigation("IdcotizacionNavigation");

                    b.Navigation("IdreservaNavigation");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Reserva", b =>
                {
                    b.HasOne("ObligatorioProgram3.Models.Cliente", "IdclienteNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("Idcliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ReservaClientes");

                    b.HasOne("ObligatorioProgram3.Models.Mesa", "IdmesaNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("Idmesa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_ReservaMesas");

                    b.Navigation("IdclienteNavigation");

                    b.Navigation("IdmesaNavigation");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Reseña", b =>
                {
                    b.HasOne("ObligatorioProgram3.Models.Cliente", "IdclienteNavigation")
                        .WithMany("Reseñas")
                        .HasForeignKey("Idcliente")
                        .HasConstraintName("FK_ReseñaCliente");

                    b.HasOne("ObligatorioProgram3.Models.Restaurante", "IdrestauranteNavigation")
                        .WithMany("Reseñas")
                        .HasForeignKey("Idrestaurante")
                        .HasConstraintName("FK_ReseñaRestaurante");

                    b.Navigation("IdclienteNavigation");

                    b.Navigation("IdrestauranteNavigation");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.RolPermiso", b =>
                {
                    b.HasOne("ObligatorioProgram3.Models.Permiso", "Permiso")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdPermisos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioProgram3.Models.Rol", "Rol")
                        .WithMany("RolPermisos")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Usuario", b =>
                {
                    b.HasOne("ObligatorioProgram3.Models.Rol", "IdrolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("Idrol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_UsuariosRoles");

                    b.Navigation("IdrolNavigation");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");

                    b.Navigation("Reseñas");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Clima", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Cotizacion", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Menu", b =>
                {
                    b.Navigation("OrdenDetalles");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Mesa", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Ordene", b =>
                {
                    b.Navigation("OrdenDetalles");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Permiso", b =>
                {
                    b.Navigation("RolPermisos");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Reserva", b =>
                {
                    b.Navigation("Ordenes");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Restaurante", b =>
                {
                    b.Navigation("Mesas");

                    b.Navigation("Reseñas");
                });

            modelBuilder.Entity("ObligatorioProgram3.Models.Rol", b =>
                {
                    b.Navigation("RolPermisos");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
